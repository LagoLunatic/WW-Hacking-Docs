
800589AA,2 - Player's HP when starting a new game, in quarters of hearts.
  (This is hardcoded as part of function init__21dSv_player_status_a_cFv)

8022DDBA,2 - X position of the Nintendo logo during bootup.
8022DDBE,2 - Y position of the Nintendo logo during bootup.
8022DEEA,2 - X position of the Dolby logo during bootup.
8022DEEE,2 - Y position of the Dolby logo during bootup.
  (These four values are hardcoded as part of function phase_2(dScnLogo_c *))

8034F69D,1 - Empty string "".

8034F7D8,4 (34C7D8,4 in main.dol) - Stage name the player starts a new game in ("sea").
80058BA7,1 (055AE7,1 in main.dol) - Room number the player starts a new game in (0d44, Outset Island).
80058BAF,1 (055AEF,1 in main.dol) - Spawn ID the player starts the game at (0d206, on Aryll's Lookout).

8034FCC0-8034FD0F Item data. m_data__12daItemBase_c
  00,4 - Field item gravity. (Float)
  08,4 - ? (Float)
  10,4 - speed? (Float)
  16,2 - 
  18,2 - 
  1A,2 - 
  1C,2 - Number of frames to take to do a complete Y rotation.
  42,2 - 
8034FD10 - Shop item display data. mData__12daShopItem_c
  Entry length 0x20.
  Index in this list is the item ID. Item IDs 00 through FE have entries.
  00,4: X scale.
  04,4: Y scale.
  08,4: Z scale.
  0C,4: X offset.
  10,4: Y offset.
  14,4: Z offset.
  18,2: X rotation.
  1A,2: Y rotation.
  1C,2: Z rotation.
  1E,2: Padding.

80352EA0-80352EDF - List of blue fog spawn patterns for each room of Earth Temple.
  The index in this list is the room number of a room in the M_Dai stage.
  There are decimal 16 entries in total for rooms 0-15. Rooms 16-20 don't get entries.
  Each entry is a word, which is a number 0-4 for which blue fog spawn pattern to use.
  Or the number can be -1 if no blue fog appears in this room.
  The actual behavior of the blue fog depending on the number 0-4 is hardcoded in the function poison_move.

8035ABE4-8035B54F - List of figurines. (l_CharaData)
  Entry length 0x12.
  0x86 entries in total.
  00,2: X ???
  02,2: Y ???
  04,2: Z ???
  06,2: X pos? "Geo"
    stored to the struct dSnap_Obj+0x0C,4 after converting to float and multiplying by something
  08,2: Z pos? "Geo"
    stored to the struct dSnap_Obj+0x10,4 after converting to float and multiplying by something
  0A,2: (this / 1000.0) = ? (for comparison)
  0C,2: arg r8 to "SetInf"
    stored to the struct dSnap_Obj+0x1C,2
  0E,2: ? (for comparison)
  10,1: "FigRoomId"?
  11,1: ???

8035CEEC,4 - Link's maximum forward movement speed. (17.0)
  Seems to be used for both running forward and autojumping forward.
8035D4B8,4 - Link's minimum forward movement speed when doing an autojump. (9.0)

8035C764 - List of Link's animations. (daPy_lk_c::mAnmDataTable)
  Entry length 8.
  Argument r4 to setSingleMoveAnime is an example of an index in this list.
  00,2: ? "under" or "upper" anim?
  02,2: ? "under" or "upper" anim?
  04,1: Left hand model index?
  05,1: Right hand model index?
  06,2: Texture animation index.
    This number is an index in list 8035C36C.

8035C36C-8035C61F - List of Link's texture animations. (daPy_lk_c::mTexAnmIndexTable)
  Entry length 4. 0xAD entries in total.
  00,2: File index of the BTP animation from LkAnm.arc to play. (Swaps Link's facial textures out.)
  02,2: File index of the BTK animation from LkAnm.arc to play. (Scrolls Link's pupil UVs around.)

8035F9B8-8035F9F7 - List of Ballad of Gales warp destinations.
  Entry length 7. There are 9 entries in total.
  00,1: X pos of the sector on the sea chart (-3 to 3).
  01,1: Y pos of the sector on the sea chart (-3 to 3).
  02,1: Warp index of this warp.
  03,1: Warp index of the warp to the left of this one.
  04,1: Warp index of the warp to the right of this one.
  05,1: Warp index of the warp above this one.
  06,1: Warp index of the warp below this one.

8035BD34 - List of item IDs given from certain story-important cutscenes (STB cutscenes).
  master sword, pearls, etc.
  (this is equivalent to offset 358D34 in main.dol)
  this list is read from by 800e7420, execute__10daDemo00
  All the entries in the list:
    39 Master Sword (Powerless)
    3A Master Sword (Half Power)
    3E Master Sword (Full Power)
    6A Din's Pearl
    6B Farore's Pearl
    69 Nayru's Pearl
    30 Delivery Bag
    3B Hero's Shield
    35 Fire and Ice Arrows
    FF (No item)

803398D8-8033A647 - Mapping of actor IDs to rel filenames. (DynamicNameTable)
  Entry length 8.
  Total entries: 0x1AE (though the very last one is just an end marker with actor ID = -1).
  00,2: Actor ID. This is the ID mentioned in list 80372818.
  02,2: Padding (always 0x0000).
  04,4: Pointer to the rel filename.
80372818-80374EC3 - Actor info. (l_objectName)
  This is a mapping of actor names to the data corresponding to that name.
  Entry length 0xC.
  Total entries: 0x339.
  00,8: Actor name.
  08,2: Actor ID. This is the key in list 803398D8.
  0A,1: Actor subtype index.
    When multiple different actor names correspond to a single REL file, this index is what distinguishes them.
    Many REL files just ignore this value and instead use their parameters to know which way to behave.
    But some, like d_a_tag_md_cb.rel actually rely on this to determine what they should do.
  0B,1: GBA type.
    This is used by treasure chests and salvage points, passed as argument r7 to drawPointSingle__6dMap_cFUcfffScsUcUcUc
    In the main executable, this value for some unknown entity type is passed as argument r8 to setCollectPoint__6dMap_cFUcUcfffScsUcUcUcUc

803B9218 - List of each REL. (DMC)
  The actor ID is the index in this list.
  Each entry is a pointer to the DynamicModuleControl struct for this REL.
  For actor IDs that are in main.dol and have no REL, the pointer will be 0 instead.
  Format of each DynamicModuleControl:
    Each DynamicModuleControl is 0x2C bytes long.
    0C,4: Pointer to ???
    1C,4: Pointer to the REL name for this REL (without the .rel extension).

80363120 - List of which files to preload for each stage. (PreLoadInfoT)
  Entry length 0x10.
  00,4: Pointer to the stage name, a string.
  04,4: ???
  08,4: Pointer to a list of which files to preload for this stage.
    This is a list of pointers to strings, which are the names of arc files in the res/Object folder, without the .arc file extension.
  0C,1: ???
  0D,1: Number of files to be preloaded.

g_fopAcTg_Queue:
80372028,4 - Pointer to last entity/node in RAM?
8037202C,4 - Pointer to first entity/node in RAM?
80372030,4 - Number of entities/nodes currently in RAM?

80375080 - List of stage layer tables.
  This has which DZx chunk names are for each layer. e.g. ACT0 is the ACTR chunk for layer 0.

80375E1C-80375FBB (372E1C in main.dol) - Shop item data.
  Entry length 0x10.
  00,4: Item ID.
  04,4: Negative prerequisite item ID you need to NOT own before you can buy this item.
  08,4: Prerequisite item ID you need before you can buy this item.
    -1 for no prerequisite? Or -1 might be an invalid prerequisite?
  0C,1: Bitfield affecting what can prevent you from buying the item.
    & 01 - This item has a prerequisite item. This bit must be set for the prerequisite item ID above to do anything.
    & 02 - This item has a negative prerequisite item. This bit must be set for the negative prerequisite item ID above to do anything.
    & 04 - This item has a maximum number of it you can carry. (Bombs, bait, etc.)
    & 08 - This item requires you to own a bottle. Doesn't need to be empty.
    & 10 - This item requires an empty bottle.
    & 20 - This item costs rupees to buy.
  0D,3: Padding.
80375FBC-80376263 (372FBC in main.dol) - Shop item set data.
  Entry length 0x14.
  00,4: Pointer to the shop item data for this item. (In list 80375E1C.)
  04,4: Message ID shown when you select this item in the shop.
  08,4: Message ID that asks you if you're sure you want to buy this item.
  0C,4: ??
  10,4: Number of the item given...?

803764DC-803764FF - List of pointers to the shop item positions for each shop.
  Each pointer points to a list of X,Y,Z positions of each of the items in the shop.
  Entries 00-07 each have 3 items, or 9 floats. Entry 08 has 12 items, or 36 floats.
  00 8037632C Item_set_pos_data_dshop   - ?
  01 80376350 Item_set_pos_data_bmshop1 - ?
  02 80376374 Item_set_pos_data_bmshop2 - ?
  03 80376398 Item_set_pos_data_bshop_3 - Beedle's shop with the Bait Bag (on Outset and probably other islands).
  04 803763bc Item_set_pos_data_bshop_4 - Beedle's shop with ?
  05 803763e0 Item_set_pos_data_bshop_5 - Beedle's shop with ?
  06 80376404 Item_set_pos_data_bshop_6 - Beedle's special shop ship on Rock Spire.
  07 80376428 Item_set_pos_data_bshop_7 - ?
  08 8037644c Item_set_pos_data_rshop_0 - Zunari's shop on Windfall.

80377018-8037705F - List of position offsets(???) for carryable weapons (Boko).
  Entry length 0xC.
  6 entries in total.
  The index in this list is the parameter of the weapon entity.
  00,4: float
  04,4: float
  08,4: float

80377754-8037775F - List of BGM IDs that can be started by events in event_list.dat.
  Each entry is a word, the BGM ID. 3 entries total.
  The index in this list is the "BGM_ID" property of a "BGM_START" action of a "DIRECTOR" actor in an event.
  0 - 80000007 - Inside FF1
  1 - 80000012 - Meet Tetra
  2 - 80000017 - Fairy Woods

8037ED40-8037EDCF - List of "cam move BG" types. (dCamera_c::mvBGTypes(void))
  0x24 entries in total.
  Each entry in this list is a pointer to a string. That string is the name of the camera movement type.
  These are all the entries:
    00 80359A60 ????
    01 80359A65 Field
    02 80359A6B Dungeon
    03 80359A73 Plain
    04 80359A79 DungeonDown
    05 80359A85 DungeonUp
    06 80359A8F DungeonCorner
    07 80359A9D Jump
    08 80359AA2 DungeonWide
    09 80359AAE Room
    0A 80359AB3 FieldCushion
    0B 80359AC0 OverLook
    0C 80359AC9 Corridor
    0D 80359AD2 Subject
    0E 80359ADA DungeonPassage
    0F 80359AE9 Cliff
    10 80359AEF Cliff2
    11 80359AF6 MajTower
    12 80359AFF Boss01
    13 80359B06 Boss02
    14 80359B0D Gamoss
    15 80359B14 MiniIsland
    16 80359B1F Amoss
    17 80359B25 Cafe
    18 80359B2A P_Ganon1
    19 80359B33 P_Ganon2
    1A 80359B3C WindBoss
    1B 80359B45 P_Ganon3
    1C 80359B4E G_BedRoom
    1D 80359B58 G_Roof
    1E 80359B5F G_BedRoom2
    1F 80359B6A Boss04
    20 80359B71 WindHall
    21 80359B7A BigBird
    22 80359B82 DStairs
    23 00000000 [empty string]

80371618,24 - Data related to the game heap. (GameHeapCheck)
80371618,4 - Pointer to the string "Game".
8037161C,4 - Pointer to the game heap.
Game heap format:
78,4: Pointer to the first free block of memory.
7C,4: Pointer to the last free block of memory.
80,4: Pointer to the first used block of memory.
84,4: Pointer to the last used block of memory.
Format of each block of memory in the game heap:
00,2: 0x0000 for free blocks. For used blocks, constant 0x484D? (Maybe the string "HM"...?)
02,1: 0x00?
03,1: 0x00 for free blocks, 0xFF for used blocks?
04,4: Size of this block of memory.
08,4: Pointer to the previous block of memory of this type. (e.g. The previous free block if this is a free block.)
0C,4: Pointer to the next block of memory of this type.
10,[size]: The actual data in this block of memory.

803F772C,4 - This global variable has a pointer to the last allocated memory block on the game heap. This is used by constructors to know what memory to use. (sCurrentHeap__7JKRHeap)
  This is accessed as r13-0x69B4.

803842B0 (3812B0 in main.dol) - List of item resources.
  Entry length 0x24. Index is an item ID.
  00,4: Pointer to a string, the name of the .arc containing this item's model.
  04,4: Pointer to a string. Filename of the item icon to show in the inventory for this item.
    Item icon textures are stored in: /files/res/Msg/itemicon.arc
  08,2: File index within the .arc of this item's 3D model.
  0A,2: File index within the .arc of this item's texture animation (BTK).
  0C,2: (equivalent of 08,2 for field items)
  0E,2: File index within the .arc of this item's TEV register animation (BRK).
  10,2: (equivalent of 0C,2 for field items)
  12,2: File index within the .arc of this item's bone animation (BCK)...? TODO check if this is used
  14,1: Keyframe index in the TEV register animation to use.
    This is used for rupees to give them a different color.
    All rupees have the same model and texture, and have the same TEV register animation that simply cycles through all the different colors.
    By pausing the TEV register animation on different keyframes, different rupees have different colors.
  15,1: Padding?
  16,2: Message ID of the item's name.
    This is used for when you hover over the item on the pause screen.
    Note that this message ID plus 0xC8/0d200 is the description to be shown when you press A while hovering over it on the pause screen.
  1E,1: ?
  20,2: Maximum amount of memory that may be needed to instantiate this item's assets, or 0 for no max.
    Argument r5 to entrySolidHeap.
803866B0 (3836B0 in main.dol) - List of field item resources. Items that appear freely placed in the world as ACTRs.
  Entry length 0x1C.
  Format:
  00,4: Pointer to a string, the name of the .arc containing this item's field model.
  04,2: File index within the .arc of this item's 3D model.
  06,2: File index within the .arc of this item's texture animation (BTK).
  08,2: 
  0A,2: File index within the .arc of this item's TEV register animation (BRK).
  0C,2: 
  0E,2: File index within the .arc of this item's bone animation (BCK).
  10,1: Keyframe index in the TEV register animation to use.
    This seems unused - the equivalent value in the item resources is instead used even for field items.
  18,2: 
  list is read by 800f55f4
  func CreateItemHeap in d_a_itembase.c is what actually creates the item
803882B0 (3852B0 in main.dol) - item_info?
  Entry length 4. Index is an item ID.
  00,1: ? this is an integer but gets converted to a float before being used by setShadow.
  01,1: Y offset.
  02,1: Radius. This affects how close to the player the item needs to be for it to be picked up. 
  03,1: Bitfield.
    & 01 - This item does not fade out and disappear after a time limit.
    & 02 - Item is permanently deactivated.
      It acts the same as if the item has an activation switch that isn't set yet where it can't be picked up, except it never activates from a switch.
    & 04 - Set for small keys, big keys, and the telescope, but seems to never be read by code?
    & 10 - Shadow related. Call dComIfGd_setShadow instead of dComIfGd_setSimpleShadow2?
803886B0 - Item special effect info.
  Entry length 4. Index is an item ID. (Not all items have entries here. It only goes from item 00 to item 80.)
  00,2: Which special effect?
  02,2: 0x8466 here means no special effect.
803888C8 (3858C8 in main.dol) - List of item get function pointers.

8038F8E4,??? - List of Link event actions.
  Entry length 0xC.
  The index in this list is Link's event action index. e.g. 11 (0xB) for 011get_item.
  08,04: Pointer to the initialization function for this Link state.
  Note that this list is just all 00s in main.dol. It's initialized at runtime by __sinit_d_a_player_main_cpp.

8038DDAC,4 - Bitfield of damage types the player's sword should do? maybe?
80371DD4,4 - Bitfield of damage types for...? skull hammer maybe?

80392260-803922A7 - List of image to show on the sea chart to represent that you've gotten the treasure from this sector's salvage point.
  Each entry is a pointer to the filename of the image to show.
  The index in this list is the type of chart from the chart data. e.g. Index 0 is an image of a Triforce.

80393688-803936A7 - List of BLO1 UI layout files for each song's interactive tutorial that appears in the message box. (mLayout)
  (8 entries, each is a pointer to a string which is the filename of the BLO1 file in files/res/Msg/msgres.arc.)
803FB4C0-803FB4C7 - List of the number of notes that are in each song for the purposes of the interactive tutorial that appears in the message box. (mBeatNum)

8039B5F4 - List of Wind Waker songs.
  7 bytes long.
  00,1: Number of notes in the song. (3, 4, or 6.)
  01,6: Array of song notes.
    0 - Center
    1 - Up
    2 - Right
    3 - Down
    4 - Left

8039BC30-8039C08F - List of NPC voices/message sounds. (JAIZelBasic::charVoiceTable)
  Entry length 4. 0x118 entries in total.
  The index in this list is the sound value from a sound command in a message.
  00,2: Unknown 1?
  02,2: Unknown 2?
  How NPC voices/message sounds work:
    Sound ID 481F (JA_SE_CV_COMMON_PEOPLE) is used for all NPC voices/message sounds.
    The contents of the sound is changed by calling JAISound::setPortData with r4 = 8 and r5 = (unknown_1 << 8 | unknown_2).
  What each sound index in this list is:
      0: N/A. Don't play any sound.
      1: Aryll: "Ah!"
      2: Aryll: "Wah!?"
      7: Aryll: "Auhh!?"
     95: Aryll: "Hai!"
    104: Aryll: "Oyyyy!"
    105: Aryll: "Hoyyyy!"
    106: Aryll: "Haiiii~!"

8039C090-8039C21F - List of Link voices. (JAIZelBasic::linkVoiceTable)
  Entry length 8. 0x32 entries in total.
  The index in this list is the link voice index (argument r4 to daPy_lk_c::voiceStart).
  00,1: The SE index of the voice sound effect. (Voices are in category 1.)

8039C280-8039C2E3 - List of 1st dynamic scene waves. (BGM related) (m_dy_wave_set_1st__11JAIZelBasic)
  Entry length 2. 0x32 entries in total.
  1st dynamic scene wave index is an index in this list.
  00,1: One scene wave to load (or 0 for blank). (This is argument r3 to loadSceneWave.)
  01,1: Another scene wave to load (or 0 for blank). (This is argument r3 to loadSceneWave.)
8039C2E4-8039C30B - List of 2nd dynamic scene waves. (BGM related) (m_dy_wave_set_2nd__11JAIZelBasic)
  Entry length 2. 0x14 entries in total.
  2nd dynamic scene wave index is an index in this list.
  00,1: One scene wave to load (or 0 for blank). (This is argument r3 to loadSceneWave.)
  01,1: Another scene wave to load (or 0 for blank). (This is argument r3 to loadSceneWave.)

8039C30C-8039C4EF (39930C in main.dol) - List of stage BGM info. (BGM related) (m_scene_info__11JAIZelBasic)
  Each entry is 4 bytes long. 0x79 entries in total.
  The spot ID of a particular stage is its index in this list (see list 8039C5B8 for more info on spot IDs).
  00,2: BGM ID to play.
  02,1: 1st dynamic scene wave index to load.
  03,1: 2nd dynamic scene wave index to load.
8039C4F0-8039C5B7 (3994F0 in main.dol) - List of island BGM info. (BGM related) (m_isle_info__11JAIZelBasic)
  Each entry is 4 bytes long. 0x32 (decimal 50) entries in total.
  The island's room number is its index in this list.
  00,2: BGM ID to play.
  02,1: 1st dynamic scene wave index to load.
  03,1: 2nd dynamic scene wave index to load.
8039C5B8-8039C797 (3995B8 in main.dol) - List of BGM spot names. (BGM related) (spot_dir_name__11JAIZelBasic)
  Each entry is 4 bytes long. 0x78 entries in total.
  Each entry is a pointer to a string that is a stage name.
  The "spot ID" for a particular stage is the index of that stage's name in this list +1.

803A2F05,1 - The Sea Floor Group Info of the DZB collision group Link is currently located above, used for audio-related purposes. (Officially called "GrpSoundId".)
  If 0, Link is not above the sea floor. Sea related music will not play. (Except for room 0 of the sea - that's always considered the sea floor.)
  Otherwise, it's a bitfield as follows:
  & 3F - The room ID of the sea sector Link is in. This controls
  & 40 - Link is above the Inner Sea of a sector's sea floor.
  & 80 - Link is above the Outer Edge of a sector's sea floor.
  If neither &40 nor &80 are set, Link is instead above the Inner Edge of a sector's sea floor.
  Definitions of the different types of sea floor are as follows:
    "Inner Sea": The center of a sector's sea floor, not on the border. (Collision group named "soko".)
    "Inner Edge": The inner border of a sector's sea floor. (Collision group named "soko_uti".)
    "Outer Edge": The outer border of a sector's sea floor. (Collision group named "soko_soto".)
    "Outer Sea": Part of the sea floor that is not specific to any sector, is part of room 0 of the sea and is between sectors.

803A2F10,4 - Might be what the next scene music to play should be?
  If this is 0, music does not get played on Windfall.
  But if it's 8000003B music does get played on Windfall.

80398B60,40 - Directory name for wave banks.
  "Audiores/Banks/"

803A2F16,1 - Related to currently playing music...?

803A2F1A,1 - The next 1st dynamic scene wave index to load.
803A2F1D,1 - The next 2nd dynamic scene wave index to load.
803A2F20,1 - The next island room number the player is about to go to, for deciding what the next BGM should be.

803A4C25,1 - Ship sail state. 1 if sailing, 0 if not.
  (This variable is part of the JAIZelBasic audio struct, so it's likely used for controlling the sailing music.)

803A4DF0 - Has info on the current controller input state. (g_mDoCPd_cpadInfo)
803A4DF0,4 - Control stick horizontal axis. Float from -1 to 1.
803A4DF4,4 - Control stick vertical axis. Float from -1 to 1.
803A4E00,4 - C-stick horizontal axis. Float from -1 to 1.
803A4E04,4 - C-stick vertical axis. Float from -1 to 1.
803A4E20,1 - Bitfield of whether certain buttons are currently being pressed down.
  01 - A button is down
  02 - L button is down
  04 - R button is down
  08 - Z button is down
  10 - D-pad up arrow button is down
  20 - D-pad down arrow button is down
  40 - D-pad right arrow button is down
  80 - D-pad left arrow button is down
803A4E21,1 - Bitfield of whether certain buttons are currently being pressed down.
  01 - ??? button is down
  02 - ??? button is down
  04 - ??? button is down
  08 - ??? button is down
  10 - Start button is down
  20 - Y button is down
  40 - X button is down
  80 - B button is down
803A4E22,1 - Bitfield of whether certain buttons were just pressed this frame.
  01 - A button was just pressed this frame
  02 - L button was just pressed this frame
  04 - R button was just pressed this frame
  08 - Z button was just pressed this frame
  10 - D-pad up arrow button was just pressed this frame
  20 - D-pad down arrow button was just pressed this frame
  40 - D-pad right arrow button was just pressed this frame
  80 - D-pad left arrow button was just pressed this frame
803A4E23,1 - Bitfield of whether certain buttons were just pressed this frame.
  01 - ??? button was just pressed this frame
  02 - ??? button was just pressed this frame
  04 - ??? button was just pressed this frame
  08 - ??? button was just pressed this frame
  10 - Start button was just pressed this frame
  20 - Y button was just pressed this frame
  40 - X button was just pressed this frame
  80 - B button was just pressed this frame

803B9218 - List of which files (maybe Rels specifically?) are currently loaded.
  Entry length 4. 0x1F6 entries in total.
  The index in this list is the actor ID.
  Each entry is a pointer to something? (e.g. 80ad4e30) Or 0 if it's invalid?

803BDC88-803C2187 - List of room controls. (related to zones?) (dStage_roomControl_c::mStatus)
  Entry length 0x114.
  The index in this list is the room number.
  There are 0x40 entries in total, the maximum number of rooms a given stage can have.
  000,4: Pointer to 803754A4 (_15dStage_roomDt_c virtual table)
  104,1: Bitfield relating to room loading??
    & 01 - Must be 0 before the room will load in?
    & 02 - Room is loading.
    & 06 - if nonzero, stop looping over all room controls...?
    & 08 - Room is hidden.
      Checked by treasure chests, in daTbox_c::checkRoomDisp(int)
    & 10 - ???
      Checked by treasure chests, in daTbox_c::checkRoomDisp(int)
    If 08 is not set and 10 is set, the room is considered loaded and treasure chests will be considered active, otherwise not?
  107,1: Zone number? Read by getZoneNo func.
    valid zone numbers are 00-1F
  10C,4: The unique entity ID of the room entity for this room. (An instance of fopScnM.)

803754A4,13C - _15dStage_roomDt_c virtual table.
  This is a list of functions that get or set pointers to each of the DZR/DZS chunk types.
  e.g. At offset 0xF0 in here is a pointer to dStage_roomDt_c::getFileListInfo, the function that returns a pointer to FILI.


=========== 803C4C08: g_dComIfG_gameInfo (instance of dComIfG_inf_c struct)


803C4C08-803C4C1F - Current player status.
803C4C08,2 - Max HP (in quarters of hearts, counting heart pieces).
803C4C0A,2 - Current HP (in quarters of hearts).
803C4C0C,2 - Current num rupees.
803C4C11,1 - Index of the inventory slot corresponding to the item equipped on the X button, or FF for none.
803C4C12,1 - Index of the inventory slot corresponding to the item equipped on the Y button, or FF for none.
803C4C13,1 - Index of the inventory slot corresponding to the item equipped on the Z button, or FF for none.
  These determine what items on the inventory screen are highlighted in yellow.
  0x00-0x14 are normal items (index in list 803C4C44).
  0x18-0x1F are spoils (index in list 803C4C7E).
  0x24-0x2B are bait (index in list 803C4C86).
  0x30-0x37 are delivery bag items (index in list 803C4C8E).
803C4C16,1 - Currently equipped sword ID.
  38 - Hero's Sword
  39 - Master Sword (Powerless)
  3A - Master Sword (Half Power)
  3E - Master Sword (Full Power)
803C4C17,1 - Currently equipped shield ID.
  3B - Hero's Shield
  3C - Mirror Shield
803C4C18,1 - Current Power Bracelets ID. Should be 28 to own them.
803C4C1A,1 - Current wallet.
  0 - 200 Rupee Wallet
  1 - 1000 Rupee Wallet
  2 - 5000 Rupee Wallet
803C4C1B,1 - Max magic meter/MP.
803C4C1C,1 - Current magic meter/MP.

803C4C2C,4 - Current time in the day. (Float.)
  Ranges from 0.0 to 360.0.

803C4C38,8 - Stage name of the player's "return place" (where you will be placed when you reload your save).
  The 8th byte must be 00.
803C4C40,1 - Room number of the player's "return place" (where you will be placed when you reload your save).
803C4C41,1 - Spawn ID of the player's "return place" (where you will be placed when you reload your save).

803C4C44-803C4C58 - Inventory. (dSv_player_item_c)
  Controls which items are in which slots on the inventory screen. Each slot is one byte.
  If the byte is FF it means no item is in the slot.
  Otherwise the byte is the item ID of the item in that slot.
  The order of slots is from left to right, then top to bottom.
Each inventory slot:
803C4C44,1 - Telescope (20)
803C4C45,1 - Sail (78)
803C4C46,1 - Wind Waker (22)
803C4C47,1 - Grappling Hook (25)
803C4C48,1 - Spoils Bag (24)
803C4C49,1 - Boomerang (2D)
803C4C4A,1 - Deku Leaf (34)
803C4C4B,1 - Tingle Tuner (21)
803C4C4C,1 - Picto Box (23, 26)
803C4C4D,1 - Iron Boots (29)
803C4C4E,1 - Magic Armor (2A)
803C4C4F,1 - Bait Bag (2C)
803C4C50,1 - Bow (27, 35, 36)
803C4C51,1 - Bombs (31)
803C4C52,1 - Bottle 1
803C4C53,1 - Bottle 2
803C4C54,1 - Bottle 3
803C4C55,1 - Bottle 4
  Bottle item IDs:
    50 - Empty Bottle
    51 - Red Potion
    52 - Green Potion
    53 - Blue Potion
    54 - Elixir Soup (1/2)
    55 - Elixir Soup
    56 - Bottled Water
    57 - Fairy in Bottle
    58 - Forest Firefly
    59 - Forest Water
803C4C56,1 - Delivery Bag (30)
803C4C57,1 - Hookshot (2F)
803C4C58,1 - Skull Hammer (33)

803C4C59-803C4C6D - List of bitfields of which items you own.
803C4C59,1 - Bitfield of whether you own the telescope + what bottle contents you have ever owned at an point.
  0 - Telescope
  1 - Unused bottle contents item 4F
  2 - Empty Bottle
  3 - Red Potion
  4 - Green Potion
  5 - Blue Potion
  6 - Elixir Soup (1/2)
  7 - Elixir Soup
803C4C5A,1 - Bitfield of whether you own the sail + what bottle contents you have ever owned at an point.
  0 - Boat's Sail
  1 - Bottled Water
  2 - Fairy in Bottle
  3 - Forest Firefly
  4 - Forest Water
  5 - Unused bottle contents item 5A
  6 - Unused bottle contents item 5B
  7 - Unused bottle contents item 5C
803C4C5B,1 - Bitfield of whether you own the wind waker + what bottle contents you have ever owned at an point.
  0 - Wind Waker
  1 - Unused bottle contents item 5D
  2 - Unused bottle contents item 5E
  3 - Unused bottle contents item 5F
  4 - Unused bottle contents item 60
  5 - 
  6 - 
  7 - 
803C4C5C,1 - Bitfield of whether you own the grappling hook.
  0 - Grappling Hook
803C4C5D,1 - Bitfield of whether you own the spoils bag.
  0 - Spoils Bag
803C4C5E,1 - Bitfield of whether you own the boomerang.
  0 - Boomerang
803C4C5F,1 - Bitfield of whether you own the deku leaf.
  0 - Deku Leaf
803C4C60,1 - Bitfield of whether you own the tingle tuner.
  0 - Tingle Tuner
803C4C61,1 - Bitfield of what picto boxes you own.
  0 - Picto Box
  1 - Deluxe Picto Box
803C4C62,1 - Bitfield of whether you own the iron boots.
  0 - Iron Boots
803C4C63,1 - Bitfield of whether you own magic armor.
  0 - Magic Armor
803C4C64,1 - Bitfield of whether you own the bait bag.
  0 - Bait Bag
803C4C65,1 - Bitfield of which types of arrows you own.
  0 - Regular arrows (Hero's Bow)
  1 - Fire and Ice Arrows
  2 - Light Arrow
803C4C66,1 - Bitfield of whether you own bombs.
  0 - Bombs
803C4C67,1 - ?
803C4C68,1 - ?
803C4C69,1 - ?
803C4C6A,1 - ?
803C4C6B,1 - Bitfield of whether you own the delivery bag.
  0 - Delivery Bag
803C4C6C,1 - Bitfield of whether you own the hookshot.
  0 - Hookshot
803C4C6D,1 - Bitfield of whether you own the skull hammer.
  0 - Skull Hammer

803C4C6E,2 - Timer for how long you have left before your Forest Water reverts to regular water?

803C4C70,1 - ?
803C4C71,1 - Number of arrows you have.
803C4C72,1 - Number of bombs you have.
803C4C76,1 - ?
803C4C77,1 - Maximum number of arrows you can carry.
803C4C78,1 - Maximum number of bombs you can carry.

803C4C7E-803C4C85 - What items are in your spoils bag.
803C4C86-803C4C8D - What items are in your bait bag.
803C4C8E-803C4C95 - What items are in your delivery bag.
  Each bag has 8 slots, each is a byte. The byte is what item it is, or FF for no item in that slot.

803C4C98,4 - Bitfield of what delivery bag items you have ever owned at any point ("reserve items").
803C4C9C,1 - Bitfield of what spoils bag items you have ever owned at an point.
803C4C9D,1 - Bitfield of what bait bag items you have ever owned at an point.
  Even if you use an item and have none of it left in your inventory, these bitfield still retains information on what items you had.

803C4CA4-803C4CAB - Number of each item in your spoils bag you have.
803C4CAC-803C4CB3 - Number of each item in your bait bag you have.
803C4CB4-803C4CBB - Number of each item in your delivery bag you have.
  Each entry is a byte, which is the number of that spoil/bait/letter you own.

803C4CBC-803C4CC8 - Bitfield of which items you own.
803C4CBC,1 - Bitfield of which swords you own.
  0 - Hero's Sword
  1 - Master Sword (Powerless)
  2 - Master Sword (Half power)
  3 - Master Sword (Full power)
803C4CBD,1 - Bitfield of which shields you own.
  0 - Hero's Shield
  1 - Mirror Shield
803C4CBE,1 - Whether you own the Power Bracelets or not. 0 or 1.
803C4CBF,1 - Whether you have the Pirate's Charm or not. Bitfield.
  0 - Pirate's Charm
  1 - Have read the Pirate's Charm description in the pause menu.
803C4CC0,1 - Bitfield relating to the Hero's Charm.
  0 - Hero's Charm is owned
  1 - Hero's Charm is currently equipped
803C4CC5,1 - Bitfield of which songs you've learned.
  0 - Wind's Requiem
  1 - Ballad of Gales
  2 - Command Melody
  3 - Earth God's Lyric
  4 - Wind God's Aria
  5 - Song of Passing
803C4CC6,1 - Bitfield of which Triforce shards you own.
803C4CC7,1 - Bitfield of which pearls you own ("symbols").
  0 - Nayru's Pearl
  1 - Din's Pearl
  2 - Farore's Pearl

803C4CDC-803C4CEB - Bitfield of charts you own.
803C4CEC-803C4CFB - Bitfield of charts you've opened up.
803C4CFC-803C4D0B - Bitfield of charts you've completed (got the treasure they point you to).
  The treasure chart indexes that are used are every number from 00-32, except 22 and 23 (0x31/0d49 charts in total).
  Indexes 0-7 are the Triforce charts.
  You can get all 49 treasure charts by setting 803C4CDC to FFFFFFFF and 803C4CE0 to 0007FFF3.

803C4D0C-803C4D3C - List of which sectors you've visited/got mapped out.
  Each sector is a byte.
  The byte is a bitfield.
    0 - Whether you've gotten this sector mapped out by a fishman.
    1 - Whether you've visited this sector or not.

803C4D4D - Bitfield of what Triforce charts you've gotten deciphered.

803C4D64,1 - The player's name. "Link" by default.
  If the first character here is 0x00, the save file is considered nonexistent.

803C4DA8,1 - Whether you're on new game+ or not, boolean.
  (It might actually be a counter for how many times you've cleared the game on this save? Not sure.)
  If this is nonzero, the player will appear in their casual clothes even if they own the Hero's Clothes.

803C4DA9,1 - Which placement of salvage points to use for this save file.
  This can be from 0 to 3. On a new game it's a random number from 0-2, on new game+ it's always 3.
  Each salvage point has four possible locations. Only the location with the duplicate ID corresponding to this value will show up on a given playthrough.

803C4DAC,1 - ???

803C522C - Bitfield of event bits you've seen.
  Byte      Bit 
  803C522C  01  saw tetra fall into the forest of fairies
  803C522D  01  seen intro to fairy woods with tetra hanging? rescued tetra?
  803C522E  80  entered forest of fairies? saw tetra in forest of fairies?
  803C522F  10  saw rito postman with telescope with aryll
  803C5230  08  ???
  803C5234  02  tetra dialogue on outset?
  803C523A  20  exited forest of fairies with tetra?
  803C524C - if this is 20, something with the shop? could be bombs related
  803C524C - if this is 10, something with the shop? could be bombs related
  803C524C - if this is 08, something with the shop? could be bombs related
  803C5256 - if this is 80, link has the hero's clothes (called by 800E7374 in execute func)
  803C5261 - if this is 10, you've seen the intro (camera zooming around outset)
  803C5262 - if bit 08 is set, collectmap62?
  803C5262 - if bit 10 is set, collectmap63?
  803C5262 - if bit 20 is set, collectmap64?
  803C532A - low 3 bits contain the state of the squid battleship minigame? as in, should it give you the piece of heart, treasure chart 7, or purple rupee.
bits set during vanilla game in order:
  803C522F  10  PIRATE_SHIP_ARRIVING_ON_OUTSET
  803C522C  01  HAS_SEEN_HELMAROC_ARRIVING_AT_OUTSET
  803C522D  08  TALKED_TO_ORCA_AFTER_HELMAROC_ARRIVED
  803C525B  10  DID_SWORD_FIGHTING_TUTORIAL
  803C522E  80  SAW_TETRA_IN_FOREST_OF_FAIRIES
  803C522C  04  FOREST_OF_FAIRIES_BOKOBLINS_SPAWNED
  803C522F  01  KILLED_ONE_FOREST_OF_FAIRIES_BOKOBLIN
  803C5230  80  KILLED_BOTH_FOREST_OF_FAIRIES_BOKOBLINS
  803C522D  01  RESCUED_TETRA
  803C523A  20  PIRATES_ON_OUTSET
  803C5234  02  LONG_TETRA_TEXT_ON_OUTSET
  803C525E  02  SAW_SHIELD_IS_MISSING
  (todo: missing event where grandma gives you shield since I already had the shield and it skipped)
  803C5250  01  WATCHED_DEPARTURE_CUTSCENE_AND_SPAWN_ON_PIRATE_SHIP
  803C5233  20  SAW_PIRATE_SHIP_MINIGAME_INTRO
  803C5233  10  COMPLETED_PIRATE_SHIP_MINIGAME
    set when you have access to the chest, but haven't opened it yet
  803C5234  08  COMPLETED_PIRATE_SHIP_MINIGAME_AND_SPAWN_ON_PIRATE_SHIP
    set when you've opened the chest
  803C5234  04  TETRA_TOLD_YOU_TO_CLIMB_UP_THE_LADDER
  803C5234  01  GOT_CATAPULTED_TO_FF1_AND_SPAWN_THERE
  803C5231  20  GOSSIP_STONE_AT_FF1
    this makes the pirate ship at outset island waiting for you to get on disappear
  803C5230  01  PICKED_UP_FIRST_BARREL_IN_FF1
    // Don't show Jail Text anymore
  803C5230  02  GRABBED_FIRST_ROPE_IN_FF1
  803C5230  04  GOT_THROWN_INTO_JAIL_IN_FF1
  803C522F  40  got caught by searchlight in FF1?
  803C5251  80  WATCHED_FIND_SISTER_IN_FF1_CUTSCENE
  803C525A  01  WATCHED_MEETING_KORL_CUTSCENE
  803C523B  80  KORL_UNLOCKED_AND_SPAWN_ON_WINDFALL
    note: this also makes tetra hanging by a branch disappear from outset's forest
  
  ... (forest haven stuff)
  803C5236  20  WATCHED_FOREST_HAVEN_INTRO_CUTSCENE
  803C5257  80  TALKED_TO_KORL_AFTER_FH_CUTSCENE
  803C5244  01  WATCHED_DEKU_TREE_CUTSCENE
    this is for killing all chuchus on deku tree's face
  803C5265  40  TALKED_TO_DEKU_TREE_AFTER_FARORES_PEARL_CUTSCENE
    this is for having asked the deku tree about the island koroks. it enables the withered trees showing up on the sea chart.
  
  (medli related stuff?)
  803C525A  40
  803C5267  80
  803C5258  08
  803C5244  20
  803C5260  04  Medli has been kidnapped by a Floormaster
  803C525F  04  Saw event where Medli calls to you from within jail
  
  (makar stuff)
  switch 21 - set when he plants the seed that causes the floormaster to capture him
  803C5260  08  Makar has been kidnapped by a Floormaster
  803C5260  40  Saw event where Makar calls to you from within jail
  
  (greatfish/jabun stuff)
  803C5265  20  seen cutscene where jabun gives you nayru's pearl?
  803C524A  80  QUILL_TELLS_US_JABUN_IS_HIDING_AT_OUTSET
  803C5236  01  TALKED_TO_KORL_AT_GREATFISH
  803C5256  01  ENTERED_KORL_AFTER_GREATFISH
  803C524B  04  WATCHED_WINDFALL_PIRATE_CUTSCENE
  
  (pearl/tower of the gods stuff)
  803C5240  10  placed nayru's pearl
  803C5240  40  placed farore's pearl
  803C5240  80  placed din's pearl
  803C524A  40  TOWER_OF_THE_GODS_RAISED
  803C525A  80  PEARL_TOWER_CUTSCENE
  803C5264  40  TALKED_TO_KORL_POST_TOWER_CUTSCENE
  switches checked during the tower raising scene:
  55
  39
  37 (checked every frame)
  
  (forsaken fortress stuff)
  803C525C  40  talked to KoRL when entering FF2
  803C526B  20  reflected phantom ganon's energy ball? maybe with empty bottle?
  803C5244  20  TALKED_TO_KORL_AFTER_HYRULE_2_AND_FF3_ACTIVE
  
  (helmaroc boss on forsaken fortress stuff)
  803C5259  01  ANIMATION_SET_2
    this is for seeing the cutscene where tetra and her gang free mila maggie and aryll from the prison
    but if I just set this and enter the room, while it does skip that event, the game just crashes while the screen is black.
    wait no it doesn't crash completely, it popups an error and then continues correctly??
  
  (stuff maybe related to queen fairy)
  803C5244  20  TALKED_TO_KORL_AFTER_HYRULE_2_AND_FF3_ACTIVE
    this is necessary before queen fairy will meet you.
    there might be other conditions though, as this crashes the game?
  803C5253  40  SOME_WEIRD_FIRE_AND_ICE_ARROWS_CUTSCENE_FLAG
    this seems to mark whether you've arrived inside mother island, regardless of whether you met the conditions to see queen fairy or not.
  803C523C  01  WATCHED_FIRE_AND_ICE_ARROWS_CUTSCENE
    this is for whether you actually met the queen and got the arrows.
  
  (triforce stuff)
  803C5269  04  talked to KoRL after getting all 8 triforce shards
  803C525F  80  WATCHED_TEXT_AFTER_FIRE_AND_ICE_ARROWS_CUTSCENE
  803C5259  08  HYRULE_3_WARP_CUTSCENE
  803C5259  02  TETRA_TO_ZELDA_CUTSCENE
  
  (various)
  803C526A  40  got sucked up by cyclos
  803C5253  04  defeated cyclos
  803C525E  01  talked to KoRL after learning the master sword lost its power, he tells you to go to wind and earth temple
  803C5264  08  related to Lenzo
  803C525A  20  got the heart piece from watering withered trees with forest water
  803C52CA  FF  event register for which withered trees have been watered?
  803C52C6  FF  another event register for which withered trees have been watered?
  803C52C7  07  another event register for how many withered trees have been watered?
  803C5237  20  got the hurricane spin from the event with orca
  803C524C  20  bought the empty bottle from beedle
  803C524C  10  bought the heart piece from beedle
  803C524C  08  bought the Treasure Chart 4 from beedle
  803C525F  08  related to makar being captured by floormasters? checked and set in d_a_tag_md_cb.rel
  803C5242  01  something related to lenzo (specified at 54C4 in d_a_npc_photo.rel)
  803C5264  08  something related to lenzo (checked at 3D08 in d_a_npc_photo.rel)
  803C52B2  FF  event register for how many shop membership points you have
  803C523E  08  TALKED_TO_LENZO_ON_WINDFALL_WITHOUT_CAMERA
  803C524A  01  TALKED_TO_MRS_MARIE_ON_WINDFALL
  803C523F  80  AGREED_TO_HELP_MRS_MARIE
  803C52EE  03  progress you've made in the letter-sorting minigame sidequest
  803C523A  08  some flag set by poor mila, and checked by both zunari and her father
  803C5239  04  gave 15 green chu jelly to doc bandam and he now stocks green potions
  803C5239  02  gave 15 blue chu jelly to doc bandam and he now stocks blue potions
  803C522D  02  watered all the withered trees?
  
  (ganon's tower stuff)
  switch 00 - phantom ganon killed by light arrows
  switch 18 - used phantom ganon's sword to destroy the blockade
  803C5266  08  used phantom ganon's sword to destroy the blockade
  
  (warp pots)
  803C52CE  07  DRC warp pots
  803C52CD  07  FW warp pots
  803C52CC  07  DRC-FW-TotG inter-dungeon warp pots (added by the rando)
  803C52CB  07  WT warp pots
  803C52CF  07  ET warp pots
  803C52D0  07  FF-ET-WT inter-dungeon warp pots (added by the rando)

803C4DB4,4 - Player's partner's X pos.
803C4DB8,4 - Player's partner's Y pos.
803C4DBC,4 - Player's partner's Z pos.
803C4DC0,2 - Player's partner's rotation.
803C4DC2,1 - Player's partner's room number.
803C4DC3,1 - Player's partner's ID number.
  this is argument r4 to set__19dSv_player_priest_cFUcR4cXyzsSc
  1 - Makar
  2 - Medli
  3 - Servant of the Tower
  (There may be more IDs for different Servants of the Tower?)

803C4F88-803C51C7 - List of all stage infos in the save file. (dSv_memory_c)
  Entry length 0x24.
  There are 0x10 stage infos in total.
  The index in this list is the stage ID.
803C4F88-803C4FAB - Stage ID 0 stage info (Sea)
803C4FAC-803C4FCF - Stage ID 1 stage info (Sea Alt)
803C4FD0-803C4FF3 - Stage ID 2 stage info (Forsaken Fortress)
803C4FF4-803C5017 - Stage ID 3 stage info (Dragon Roost Cavern)
803C5018-803C503B - Stage ID 4 stage info (Forbidden Woods)
803C503C-803C505F - Stage ID 5 stage info (Tower of the Gods)
803C5060-803C5083 - Stage ID 6 stage info (Earth Temple)
803C5084-803C50A7 - Stage ID 7 stage info (Wind Temple)
803C50A8-803C50CB - Stage ID 8 stage info (Ganon's Tower)
803C50CC-803C50EF - Stage ID 9 stage info (Hyrule)
803C50F0-803C5113 - Stage ID A stage info (Ship Interiors)
803C5114-803C5137 - Stage ID B stage info (Houses & Misc Places)
803C5138-803C515B - Stage ID C stage info (Cave Interiors)
803C515C-803C517F - Stage ID D stage info (More Cave Interiors & Ship Interiors)
803C5180-803C51A3 - Stage ID E stage info (This stage info's mem bit switches are used to keep track of Blue ChuChus being dead.)
803C51A4-803C51C7 - Stage ID F stage info (Test Maps)
Stage info format:
  00,04: Bitfield of the stage's treasure chest open flags.
  04,10: Bitfield of the stage's event switches (mem bits).
    There are 0x80 bits in total.
    These bits are grouped into words.
  14,04: Bitfield of the stage's item pickup flags.
  18,08: Bitfield of this dungeon's visited rooms.
    Note that the first 4 bytes of this bitfield can also be used as item pickup flags (flag indexes 20-3F), though this was never done in the vanilla game.
  20,01: Number of small keys you currently have for this dungeon stage.
  21,01: Bitfield of dungeon-specific flags for this dungeon stage.
    0 - Got dungeon map.
    1 - Got compass.
    2 - Got big key.
    3 - Boss is dead.
    4 - Heart container is taken.
    5 - Watched boss intro.

803C51C8-803C522B - List of bitfields of sunken treasure chest salvaged flags.
  Each sector on the sea has a single short for its bitfield. This means each sector can have a maximum of 16 sunken treasures.
  There are 0x32 bitfields in total (one for each sector, plus one at the beginning for room 0).

803C5380-803C53A3 - The currently loaded stage info in the save file.
803C5380,04 - Bitfield of the current stage's treasure chest open flags.
803C5384,10 - Bitfield of the current stage's mem bit switches.
803C5394,04 - Bitfield of the current stage's mem bit item pickup flags.
803C5398,08 - Bitfield of the current dungeon's visited rooms.
  Note that the first 4 bytes of this bitfield can also be used as item pickup flags (flag indexes 20-3F), though this was never done in the vanilla game.
803C53A0,01 - Number of small keys you currently have in the current dungeon.
803C53A1,01 - Bitfield of dungeon-specific flags for the current dungeon.
  0 - Got dungeon map.
  1 - Got compass.
  2 - Got big key.
  3 - Boss is dead.
  4 - Heart container is taken.
  5 - Watched boss intro.

803C53A4,1 - Currently loaded stage info ID (current stage ID).
803C53A5,1 - ???
803C53A8,8 - Bitfield of dan bits.
  Grouped into words.
  Dan bits are cleared when changing stages to a stage that has a stage info ID that is different from the stage you were in previously.
  So as long as you stay within a single dungeon for example, dan bits will be remembered, even if you change stages (like going to the miniboss room and back).

803C53B0 - List of zones. (dSv_zone_c)
  These are grouped into halfwords.
  Each zone is 0x4C bytes long.
  The index of the zone in this list is returned by the getZoneNo func.
  Format of each zone:
    00,1: Room number.
    01,1: Padding?
    02,6: Bitfield of zone bit switches for this zone.
      Grouped into 3 halfwords.
      All 3 of these halfwords are zeroed out when you change stages.
      The 3rd halfword is zeroed out when you change rooms as well (the one at 04,2).
    08,2: Bitfield of item pickup flags for this zone.
      This bitfield is zeroed out when you change stages.
    0A,2: Padding?
    0C,40: Huge bitfield of "zone actors".
      The index of a bit in this is the actor's enemy number (officially known as "Set ID").
      These are set by the onActor function when an enemy is killed, if its enemy number is not FFFF.
      These are temporary enemy death flags. Once this is set, the enemy is dead, even if you go through a door and come back. But it will respawn after a stage transition.

803C53B6 - Bit 0001 is for if you're currently in the Phantom Ganon fight?

Player's partner's room restart position? ("restart option")
803C5D30,1 - ?
803C5D31,1 - ?
803C5D34,2 - ? SCLS exit index for partner to use?
803C5D36,2 - Room restart rotation?
803C5D38,4 - Room restart X pos.
803C5D3C,4 - Room restart Y pos.
803C5D40,4 - Room restart Z pos.
  how are these different from the above ones at 803C4DB4?

803C5D60 - Another bitfield of event bits.
  803C5D61  04  Got Cabana Deed??
  803C5D63  10  Got the Hero's Clothes from Grandma.
  803C5D63  08  Saw the first event with the deku tree where chuchus appear on his face.
  803C5D63  04  Knocked the chuchus off deku tree's face.
  803C5D63  02  Related to Lenzo?
  803C5D63  01  Related to Lenzo?
  803C5D64  02  Temporarily has the Hurricane Spin during the training event with Orca.
  803C5D65  80  Mrs. Marie related

803C9D3C,8 - The current stage name.
803C9D44,2 - The most recent spawn ID the player spawned from.
803C9D46,1 - The most recent room number the player spawned in.
803C9D47,1 - The most recent override layer number for the player to spawn in, or FF for none.

803C9D48,8 - The next stage name the player is about to go to.
803C9D50,2 - The next spawn ID to spawn the player at.
803C9D52,1 - The next room number to spawn the player in.
803C9D53,1 - The next override layer number to spawn the player in, or FF for none.
803C9D54,1 - Whether a stage transition should happen right now?
803C9D58,4 - ?

803C5D5C,4 - Affects how the player is going to spawn in a moment?
  0 - Normal spawn
  1 - Spawn on KoRL
  (there are other valid values here, seems like this is argument r4 to changeSceneExitId)
  Note that spawn on KoRL can freeze the game if KoRL does not exist in the destination stage.
  However, spawn on KoRL is ignored if spawn type is anything other than 5.

803C9DA0,4 - Has a pointer to the current stage info from the DZx file (the STAG chunk's only entry).

803C9DE0,F4 - Instance of dEvt_control_c
  00,C0 - List of dEvt_order_c
    Entry Length 0x18
    8 entries in total.
    00,2 - dEvt_EventType 0 Talk, 1/A Door/Treasure, 2 Demo, 3 Compulsory, 4 Potential, 5 Item, 6/7/8 Presenting Items?, B Photo, 9 Catch
    02,2 - dEvt_OrderFlag
    04,2 - ? (Referenced in dEvt_control_c::setParam)
    06,2 - ?
    08,4 - fopAc_ac_c* for Actor 1
    0C,4 - fopAc_ac_c* for Actor 2
    10,2 - mEventId, index of the event for this dEvt_order_c instance
    12,2 - mPriority
    14,1 - Next dEvt_order_c index to go to in event sequence?
    15,1 - mEventInfoIdx
    16,2 - Padding?
 C0,1 - 
 C1,1 - Index of the first dEvt_order_c to use
 C2,1 - mMode (0, 1, 2, 3?)
 C3,1 - Flag to end an event?
 C4,4 - dEvt_control_c::setParam uses these to hold Base Processing Class Ids
 C8,4 - ^
 CC,4 - ^ (mPtTalk)
 D0,4 - ^ (mPtItem)
 D4,1 - mCurStaffId (Used in dEvt_control_c::giveItemCut())
 D5,1 - ?
 D6,2 -
 D8,2 - mEventId (Used in dEvt_control_c::catchCheck())
 DA,1 - mEventEndSound (Used in dEvt_control_c::demoCheck())
 DB,1 -
 DC,1 -
 DD,1 - ?
 DE,1 -
 DF,1 -
 E0,1 - X/Y/Z Button pressed when presenting an Item?
 E1,1 - Item ID of the Button Pressed for E0?
 E2,1 - mbInPhoto (Used in dEvt_control_c::photoCheck())
 E3,1 - ?
 E4,4 - Float for adjusting the Culling Distance?
 E8,2 - Flags for State during Events
 EA,4 - ?
 EE,4 - ?
 F2,2 - Padding? 

803C9ED4 - Event manager start.

803C9EA0,1 - related to events
803C9EA1,1 - related to events
803C9EA2,1 - Some state relating to events. (mMode of dEvt_control_c)
  0 - Not in an event.
  1 - in an event, black bars above and below screen, Link cannot move (Talk event?)
  2 - in an event, maybe for opening chests? (Demo event?)
  3 - ?? ("Compulsory" event?)

803C9EB0,4 - Unique ID of the item actor for the current cutscene.
803C9EB4,1 - Item ID to give in an upcoming cutscene.
  The function dProcGetItem__init will usually have the item ID to give specified by a parameter. But if that parameter is 0x100, it will instead read the item ID from this address.

803C9EC0,1 - Current number of letters in the mailbox waiting for Link to read them?
  This value could be used for other things unrelated to letters as well.
  Can also be something related to your delivery bag? (1-3)

803C9EC8,2 - Bitfield relating to events?
  0001 - Must be set for an event to work properly if the player triggers it while coming out of a door?
  0008 - Should check if there are any events ready to be run.

803C9F10-803CA40F - Huge bitfield of event flags. These are for the "flag" fields set by everything in event_list.dat.
  There are 0x2800 spots for flags in total. They take up 0x500 bytes.
  These bits are grouped into words.

===== 803CA410: dAttention_c
803CA410,4 - Always has a pointer to the player entity in RAM. (for dAttention_c)
  This refers not only to Link, but to Medli/Makar/Tower Servant/seagull when you're controlling them.

803CA57C,4 - Distance between Link and the nearest enemy he can lock on to. (Float.)
  This will be 10000.0 if there aren't any enemies within lock on range.

===== 803CA5A0

803CA718,4 - Pointer to the camera (instance of camera_class).

803CA778,4 - Current item ID up for bidding at the auction.
803CA7C0,2 - Message ID for the name of the item currently up for bidding at the auction.

803CA7F8,1 - Song index of the song to display in the message box for the interactive tutorial.

803CA8D0,4 - First bitfield of player statuses (PlayerStatus0).
  00000001 - 
  00000002 - 
  00000004 - 
  00000008 - 
  00000010 - 
  00000020 - 
  00000040 - 
  00000080 - 
  00000100 - 
  00000200 - 
  00000400 - 
  00000800 - 
  00001000 - Aiming the bow.
  00002000 - 
  00004000 - 
  00008000 - Swinging the sword.
  00010000 - Player is riding the ship. (Checked at 80120484)
  00020000 - 
  00040000 - Shooting the grappling hook or hookshot while in first person.
  00080000 - Aiming the boomerang.
  00100000 - Player is swimming.
  00200000 - Looking through the telescope.
  00400000 - Waiting for the boomerang to come back.
  00800000 - 
  01000000 - 
  02000000 - 
  04000000 - 
  08000000 - Player is crawling.
  10000000 - 
  20000000 - 
  40000000 - Charging a spin attack or hurricane spin, or performing the hurricane spin.
  80000000 - 
803CA8D4,4 - Second bitfield of player statuses (PlayerStatus1).
  00000001 - Conducting the Wind Waker.
  00000002 - 
  00000004 - 
  00000008 - Aiming the Picto Box.
  00000010 - 
  00000020 - Flying with the Deku Leaf.
  00000040 - Blowing air with the Deku Leaf.
  00000080 - 
  00000100 - 
  00000200 - 
  00000400 - In ship while it is sailing.
  00000800 - 
  00001000 - 
  00002000 - 
  00004000 - 
  00008000 - 
  00010000 - 
  00020000 - 
  00040000 - 
  00080000 - 

803CA90E,1 - The room/island number on the sea stage the player was in when they last entered a submarine or Beedle's Shop Ship.
  This is used to return the player to the same room they were in before entering.

803CA74C,4 - Always has a pointer to the player entity in RAM. (for dComIfG_play_c)
  This refers not only to Link, but to Medli/Makar/Tower Servant/seagull when you're controlling them.
803CA754,4 - Always has a pointer to the Link entity in RAM. (for dComIfG_play_c)
803CA758,4 - Always has a pointer to the player's partner entity in RAM (e.g. Medli).
803CA75C,4 - Always has a pointer to the ship entity in RAM (KoRL).

803CA7FF,1 - Affects which place name is shown?
  e.g. if a MESSAGE actor is given a TELOP_ON action with tlpNo=0xD, it will show "Dragon Roost Cavern" on the screen as the place name.
  set by line 80072240
803CA800,1 - Somehow related to place names shown on the screen like above.
  set to 2 by line 80072248

803CA91C,4 - Pointer to the item_table.bin file loaded into memory.

80390960-803909AB - List of pointers to the filepaths of the .bti image files for each place name.

803CA764,4 - Number of quarter hearts to add to the player's HP this frame.
  This is a float.
  Can be negative to damage the player.
803CA768,4 - Number of rupees to add to the player's wallet this frame.
  This is an int.
  Can be negative to take rupees away.

803CA77C,2 - Number of small keys to gradually add to the player's current number of small keys in this dungeon.
803CA77E,2 - Number of heart pieces to gradually add to the player's current life meter.
803CA780,2 - Amount of MP to gradually add to the player's current magic meter.
803CA784,2 - Amount of MP to gradually add to the player's maximum magic meter.
803CA78C,2 - Number of bombs to gradually add to the player's current number of bombs?

803CA7C4,2 - Number of rupees the currently selected shop item costs.

803CA7CE - current displayed num rupees

803CA7E3,1 - Somehow related to instruction notes displayed on screen when learning a new song? Maybe?

803CA7EF,1 - Whether the song metronome should be displayed on screen this frame. 00 or 01.

803C9810,2 - related to heart meter?
803CA7CC,2 - related to heart meter?

803CA7D2,1 - Current message mode?

803CA7D5,1 - What is currently shown on the R button icon?
803CA7D6,1 - What is currently shown on the B button icon.
  06 - "Let Go" (e.g. flying as Makar)
  07 - "Return"
  35 - Player's current sword (based on the bitfield at 803C4CBC)
  36 - "Defend"
  37 - Magic staff (from Wizzrobe?)
  38 - Machete (from ?)
  39 - Spiked mace (from Stalfos)
  3A - Magic staff (from Wizzrobe?)
  3B - Magic staff (from Wizzrobe?)
  3C - Magic staff (from Wizzrobe?)
  3E - Do not display the B button icon at all (e.g. for playing as Makar and standing on the ground)
  (I guess these weapon icons are not used ingame?)
803CA7D7,1 - What is currently shown on the A button icon.
  00 - Nothing.
  02 - "Speak"
  04 - "Lift"
  05 - 
  06 - "Let Go"
  07 - "Return"
  08 - "Put Away"
  0A - "Check"
  0B - "Open"
  0C - "Attack"
  0E - "Throw"
  10 - 
  12 - "Jump"
  17 - "Choose"
  19 - "Next"
  1A - Glowing pointy A button icon for Link being able to parry an enemy
  1B - 
  1C - "Get In"
  20 - "Take Photo"
  21 - "Info"
  23 - "Fly"
  27 - "Cancel"
  2A - "Zoom 1"
  2D - Glowing pointy A button icon for Makar planting seeds in soil
  31 - Glowing pointy A button icon for Pirate's Charm hints
  43 - 
803CA7D8,1 - ??
803CA7DB,1 - Item equipped on the X button.
803CA7DC,1 - Item equipped on the Y button.
803CA7DD,1 - Item equipped on the Z button.

80360F38 List of A/B button action icons.
  00,01: The action ID.
  04,04: Pointer to the filename of the BTI for this button icon.
    This filename is in one of the following (which archive to look in is hardcoded based on the action ID):
    files/res/Msg/acticon.arc
    files/res/Msg/itemicon.arc
    files/res/Msg/menuicon.arc

Backup inventory data used by recollection bosses in order to restore the player's proper inventory when the boss is dead:
803CA858-803CA86F - Backup player status.
  Copied to/from 803C4C08.
803CA870-803CA891 - Backup inventory.
  Copied to/from 803C4C44.
  The copy happens at 80055408.
803CA885-803CA887 - Backup current number of ?/arrows/bombs.
  Copied to/from 803C4C70.
803CA888-803CA88A - Backup max number of ?/arrows/bombs.
  Copied to/from 803C4C76.
803CA88B-803CA8A2 - Backup contents of player's bags.
  Copied to/from 803C4C7E.
803CA8A3-803CA8BA - Backup number of each item in the player's bags.
  Copied to/from 803C4CA4.
803CA8BB-803CA8C7 - Backup bitfield of what items the player owns.
  Copied to/from 803C4CBC.

803CA8E4,2 - Number of times you've hit Orca displayed on the screen.
  Does not affect how many times Orca knows you've actually hit him. That's inside Orca's entity.

803CA90C,1 - Previous room num?
803CA90D,1 - Next room num?

803CA91C,4 - Pointer to the item table for certain pots to choose what to drop from when destroyed.
  This pointer seems to lead inside of an entity or REL.

=========== 803E0BC8-803E1DC7: dRes_control_c

803E0BC8-803E14C7 - List of currently loaded resource archives from the res/Object folder. (mObjectInfo)
803E14C8-803E1DC7 - List of currently loaded resource archives from the res/Stage folder. (mStageInfo)
  Entry length 0x24.
  00,0E: Name of the RARC loaded in this slot (without the .arc extension).
  0E,02: Number of actors that currently exist that need this arc to still be loaded (ref count).
  10,04: Pointer to ??? (Can be 0.)
  14,04: Pointer to ???
  18,04: Pointer to ??? (Can be 0.)
  1C,04: Pointer to ???
  20,04: Pointer to a list of files in this archive.
    Each entry in the list is a pointer the file loaded in memory.
    The index in this list is the file index from the RARC.
    You can set a read breakpoint on the pointer for a particular file index in a particular loaded archive in order to find what is calling getRes to load that file when.

=========== 803E1DC7: End of dRes_control_c

803E2270 - Filename of the currently loaded .jpc particle archive file for the current stage.

803E7FE8 - Filename of the currently loaded room .arc file (e.g. "Room44").

Player's true position (this gets copied to the player entity's position every frame, and copied back too):
803E440C,4 - Player's X pos.
803E4410,4 - Player's Y pos.
803E4414,4 - Player's Z pos.

803E6342,1 and 803E6343,1 - X and Y pos of player's current sector on the sea chart.
803E6344,1 and 803E6345,1 - X and Y pos of the sector cursor on the main sea chart.
803E6346,1 and 803E6347,1 - X and Y pos of the sector cursor on the Ballad of Gales warp destination selection sea chart.
803E634A,1 and 803E634B,1 - X and Y pos of the tiny sector cursor on the tiny sea chart in the upper left corner of the charts view.

803E5430,4 - Wind force X, to the east. (Float.)
803E5434,4 - Wind force Y, downwards. Should be 0. (Float.)
803E5438,4 - Wind force Z, to the south. (Float.)
803E543C,4
803E544C,4 - ? Related to wind. (Float.)
  wind force? 1.0 is normal?
803E5458,2 - An angle related to wind? But always 0? After being converted to a float this is always 1, and then the wind angle is multiplied by this.
803E545A,2 - Wind angle. Every 0x4000 is equivalent to 90 degrees. Angle 0x0000 points straight east.
  Can just store to this to update wind direction on the fly.
803E545C,2 - ? another angle, alternative to 803E5458,2
803E545E,2 - ? another wind dir, alternative to 803E545A,2
803E5460,1 - ?
803E5461,1 - ?
  If 803E5461 is not 0, the wind is updated using vars 803E545C,2 and 803E545E,2.
  If 803E5461 is 0 and 803E5460 is not 0, the wind is updated using vars 803E5458,2 and 803E545A,2.
  Otherwise the wind is not updated.

803E5498,1 - Current blue fog state.
  0 - Not initialized yet.
  1 - Initialized and running.
  2+ - Disable blue fog.
803E549C,4 - Related to blue fog?
  Gets set to 0x1F4 (decimal 500) in func wether_move_poison__Fv.
Note: wether_move_poison__Fv hardcodes the check that blue fog should only appear in the M_Dai (Earth Temple) stage.
Note: See 80352EA0 for details about the layout of blue fog in a given room of Earth Temple.

803E573E - Related to the current time or weather somehow? 0 or 1.

803E5748,1 - Related to wind somehow? 0 or 1.

803E60EC-803E6133 - List of visual X/Y positions for Ballad of Gales warps on the sea chart UI. Floats.
  First the 9 X positions are listed. Then the 9 Y positions are listed.
  These can't be edited easily. This list in RAM isn't copied directly from main.dol. Instead, the unique float values are around 803FAE58, and there is a function (__ct__9dMf_HIO_cFv) which copies the unique float values to their appropriate positions in the actual list.

803F6268,4 - Boomerang trail color. (RGBA)
803F62AC,4 - Normal sword slash trail color. (RGBA)
803F62B0,4 - Elixir soup sword slash trail color. (RGBA)
803F62B4,4 - Parrying sword slash trail color. (RGBA)

803F660C,4 - Bitfield of what buttons need to be pressed in order to reset the game (X+B+Start).

803F69D4,4 - Bitfield of which actor status bits should not be allowed to update or draw this frame?

803F6A78,1 - Current room number. (mStayNo__20dStage_roomControl_c)
803F6A79,1 - Previous room number. (mOldStayNo__20dStage_roomControl_c)

803F6B44,4 - Pointer to the data for the current loaded salvage point tags. (daSalvage_c::mTagData_p)
  Format of that data:
  01,0001: ??? Number of slots in use maybe?
  04,2300: List of salvage points.
    Entry length 0x38. 0xA0 entries in total.
    Note: The code reads from this struct in a slightly strange way, where the 4 bytes from the list header are in the offset for each entry. So if it reads from offset 0x34, that's actually item ID at offset 0x30.
    00,4: X position.
    04,4: Y position.
    08,4: Z position.
    0C,4: X scale.
    10,4: Y scale.
    14,4: Z scale.
    18,4: "R" (maybe radius?) (float)
    1C,4: "H" (maybe height?) (float)
    20,4: "SwitchNo"
    28,4: "Distance" (float)
    2C,1: Room number.
    2D,1: "SaveNo"
    2E,1: "Type"
    2F,1: "Kind"
    30,1: Item ID.
    31,1: Bitfield of flags.
      01 - "Used"
    33,1: "DrawMode" / "Alpha"
    34,1: "DrawMode"
803F6B4C,4 - The index in daSalvage_c::mTagData_p of the salvage point tag currently being salvaged? (daSalvage_c::mSalvageId)
  daSalvage_c::checkDistance(void) returns the index of the currently active salvage point tag.

803F6B5D,1 - Total number of Windfall item pedestals in the current stage.
803F6B5E,1 - Current number of Windfall item pedestals in the current stage that you've placed an item in.

803F6A24,4 - Next unused entity ID?
  Call MakeOfId to get a new entity ID and increment this counter.
  This ID is stored at entity+3C.

803F6B7C,1 - Currently selected arrows index (0-3).

803F6F12,2 - Player's current Y rotation.
  Just seems to be copied from the player entity's Y rotation every frame.
  And maybe copied back too?
803F6F1A,2 - Player's current Y rotation.

803F6F1E,1 - Link's current blink timer.
  When Link's eye .btk animation is changed, this timer is set to a random number from 75-104.

803ED818,2 - Bitfield of currently pressed buttons. (For Pad.c)
803ED848,4 - Bitfield of currently pressed buttons. (For JUTGamePad.cpp)
  00000001 - D-pad left
  00000002 - D-pad right
  00000004 - D-pad down
  00000008 - D-pad up
  00000010 - Z
  00000020 - R
  00000040 - L
  00000100 - A
  00000200 - B
  00000400 - X
  00000800 - Y
  00001000 - Start
803ED84C,4 - Bitfield of buttons pressed this frame. (For JUTGamePad.cpp)
803F0F30,4 - Bitfield of currently pressed buttons. (For SIBios.c)

803ED83A,1 - If no controller is connected to port 3, this will be 0xFF.
  This is checked to know whether to show the debug heap display on screen.

803F6A68,4 - Has a pointer to something related to the map select screen maybe?

803F7199,1 - Currently selected arrows index (0-3).
803FB394 - List of particle IDs for the arrow icons at the top of the screen when you have the bow out.
  Halfwords.
  02E1 - Particle ID for fire arrows.
  02E2 - Particle ID for ice arrows.
  02EF - Particle ID for light arrows.

803F7338,4 - Part of the current random seed.
803F733C,4 - Part of the current random seed.
803F7340,4 - Part of the current random seed.
  These are initialized by cM_initRnd__Fiii.
  When one of the random functions are called (e.g. cM_rndF__Ff) these are read and used, then changed values are stored back.

803F7984,4 - 
803F798C,4 - 

803720E8 - ? game state related
803720F0,4 - pointer to ? for game state

Entity deletion queue (g_fpcDtTg_Queue):
803726A0,4 - Pointer to the first entity node to delete.
  entity_node+8,4 has a pointer to the next entity node in the list to delete.
803726A4,4 - Pointer to the last entity node to delete.
803726A8,4 - Number of entities to delete.

803B39A0 - temp location for save file data?
803B5048 - temp location for save file data?

8037b630  - dPa_name::j_o_id list of common particles that can be used with setSimple?
8037b640  - dPa_name::s_o_id list of stage bank particles that can be used with setSimple?

803F7631,1 - The number of sound categories (8).
803F7634,4 - Has a pointer to a list of how many sounds are in each sound category.
  Each entry in that list is an unsigned short, the number of sounds in that category.
  There are 8 categories.
803F763C,4 - Has a pointer to the sound categories' sound info list.
  Each entry in that list is a pointer to a list of sound infos.
  Each sound info has the same format as in the AAF file.
803F75F4,4 - Has a pointer to a list of ??? for each sound category.
  Format of that list:
    Entry length 0xC.
    04,04: Maybe a pointer to another sound??? Or 0 for none.
803F7620 - Has a pointer to to the "seqTrackInfo" list.
  Format of that list:
    Entry length 0x50.
    48,04: Pointer to ???, or 0 for none.
      The code that reads ??? starts at 8029805C, in storeSeqBuffer.
      Format of ???:
        05,01: ???
        3C,04: Pointer to "SeqParameter"?
803F7640,4 - Has a pointer to the start of the sound categories data. (mAddress)
803F7584,4 - Has a pointer to the start of the list of ??? for each wave bank. (JAInter::BankWave::initOnCodeWs)
  Format of that list:
    Entry length 0xC.
    A wave index is the index in this list. (e.g. r3 to loadSceneWave or loadGroupWave)
     08,04: Type...?
      0 - 
      1 - 
      2 - 
803F7588,4 - Has a pointer to the start of the list of ??? for each wave bank. (JAInter::BankWave::wsGroupNumber)
  Format of that list:
    Entry length 4.
    Each entry is a word. e.g. 0xFFFFFFFF.
803F74D0,4 - Maximum number of wave banks. (sTableSize)
803F74D4,4 - Has a pointer to the list of wave banks. (JASystem::WaveBankMgr::sWaveBank)
  Each entry in that list is a pointer to ???.
  [pointer+0x74] - the filesize of the .aw file.

803A2D9D,1 - Some special flag set for certain BGMs?
  e.g. BGM ID 80000115 (Helmaroc chasing you up the tower) actually plays the BGM with index 15, not 115, but sets this flag to 01.
  But then this flag is never actually read...?
803A2D9E,1 - Somehow keeps track of the last sub BGM that was playing so that the game can resume it after an item get jingle?
  00 - None
  01 - Land miniboss music (0x0019)
    Causes no-intro land miniboss music (0x001A) to play
  02 - Sea miniboss music (0x002B)
    Causes no-intro sea miniboss music (0x0046) to play
  03 - Phantom Ganon music (0x0041)
    Causes no-intro Phantom Ganon music (0x0047) to play

803F7988 - Has a pointer to a table of sine values. (jmaSinTable)
  Each entry is a float.
  The index in this list is the input value to the sin function, in terms of 0x3FE (0d1022) = 90 degrees.

803F6A68 - Has a pointer to a table of pointers to "profiles" for each actor type. (g_fpcPf_ProfileList_p)
  The index in the list is the actor ID.
  Profiles located inside a REL not currently loaded in will simply have null pointers in this list until the REL is loaded.

803F9810,4 - Floating point radius of the bomb actor's correction hitbox (size of the wall that prevents actors from walking inside the bomb).
